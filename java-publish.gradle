
// 添加插件
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'maven-publish'

project.afterEvaluate {
    loadSecretFile()
}

group = project.ext.groupId// groupId
version = project.ext.version// 库的当前版本


tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

def getTest(){
    return project.ext.name
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.ext.name
            from components.java
            pom {
                name = project.ext.name
                description = project.ext.description
                url = project.ext.url
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = project.ext.has("authId")?project.ext.authId:'uuxia'
                        name = project.ext.has("authName")?project.ext.authName:'xiaxiaoli'
                        email = project.ext.has("authEmail")?project.ext.authEmail:'xiaoli.xia@clife.cn'
                    }
                }
                scm {
                    connection = project.ext.has("connection")?project.ext.connection:'https://github.com/szhittech'
                    developerConnection = project.ext.has("connection")?project.ext.connection:'https://github.com/szhittech'
                    url = project.ext.has("url")?project.ext.url:'https://github.com/szhittech'
                }

            }

        }
    }
    repositories {
        maven {
            credentials {
                username = property('maven.username')
                password = property('maven.password')
            }
            def releasesRepoUrl = property('maven.release')
            def snapshotsRepoUrl = property('maven.snapshot')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

task dowloadSecret(type:Exec) {
    String secretFile = project.buildDir.getAbsolutePath() + File.separator + "secring.gpg";
    //String secretFile = "/Users/uuxia/Desktop/secring.gpg"
    //download('https://uuxia.cn/file/download/hfmeditech_v1.0.5_2022.02.23.13.03.15_release.apk',secretFile);
}



//build dependsOn: dowloadSecret



//static def down(String url, String name) {
//    def file = new File(name)
//    file << new URL(url).openStream()
//}

def download(String remoteUrl,String localUrl){
    new File("$localUrl").withOutputStream {out->
        new URL(remoteUrl).withInputStream {from-> out << from}
    }
}
void loadSecretFile(){
    String secretFile = project.buildDir.getAbsolutePath() + File.separator + "secring.gpg";
    //String secretFile = "/Users/uuxia/Desktop/secring.gpg"
    //download('https://uuxia.cn/file/download/hfmeditech_v1.0.5_2022.02.23.13.03.15_release.apk',secretFile);
}

