package com.java.test;

import java.io.*;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Consumer;

public class Test {

    static int bytesize = 0;

    static void fill(){
        final int length = 10077;
        byte[] bytes = new byte[length];
        final int total = 100;
        int size = (int) (length / total);
        for (int i = 0; i < total; i++){
            byte[] tmp = new byte[10];
            System.arraycopy(tmp,0,bytes,i * size,size);
        }
        byte[] tmp = new byte[10];
        System.arraycopy(tmp,0,bytes,10000,77);
    }

    public static void main(String[] args)  {
        File file = new File("/Users/uuxia/Desktop/code/java/gradle-maven/secring.gpg");
        long length = file.length();
        System.out.println("长度：" + length);
        byte[] bytes = getBytesByFile(file.getAbsolutePath());
        ByteHelper helper = new ByteHelper(bytes);
        final int total = 100;
        int size = (int) (length / total);
        for (int i = 0; i < total; i++){
            byte[] sub = helper.position(i * size, size).subBuffer();
            String tmp = Arrays.toString(sub);

            System.out.println("def byte" + i+" = "+tmp+" as byte[]");

//            tmp = tmp.replaceAll("\\[","");
//            tmp = tmp.replaceAll("\\]","");
//            System.out.println("byte[] byte"+ i +" = new byte[]{"+tmp+"};");
        }
        byte[] byte100 = helper.position(10000, 77).subBuffer();
        String tmp = Arrays.toString(byte100);
        //System.out.println("byte[] byte"+ 100 +" = new byte[]{"+tmp+"};");
        System.out.println("def byte" + 100+" = "+tmp+" as byte[]");


//        byte[] byte0 = new byte[]{-107, 3, -67, 4, 86, 111, -128, -37, 1, 8, 0, -74, 13, -5, 91, -100, -15, 78, -108, 40, 109, 126, 58, 33, -91, 64, -119, 125, -91, 124, -57, -24, -82, -61, -45, -85, 41, 4, -104, 70, -12, 74, -87, 86, 68, 81, -116, 52, -5, 36, 51, 102, -17, -30, -111, -92, 116, 56, 73, -62, 123, -88, -95, -77, -120, -53, 88, 69, 115, 73, -24, -117, -16, -76, -103, 20, -78, -44, 16, -74, -8, 57, -59, -122, -68, -79, 92, 8, 127, 46, 73, -91, -65, -80, 90, 75, -82, 56, -68, -25};
//        byte[] byte1 = new byte[]{60, 99, -21, -114, 21, 103, 75, -44, -45, -8, -8, -62, -85, 13, 81, 118, -84, -33, -77, -118, -117, -23, 121, -45, -97, -69, 29, -120, -24, 104, -123, 58, -100, 82, -48, -9, -104, 114, 25, -30, -54, 32, 86, 3, -50, -39, -2, -43, 7, 14, 0, 64, 86, -4, 48, -51, -7, 62, -45, 45, 11, -30, 110, -109, 57, -77, 46, 126, -26, 38, 57, 96, -51, 86, 89, -72, -50, 39, -122, -58, -54, -98, -9, 121, 1, 3, 59, -8, -68, 89, 62, -59, 31, -72, 92, -116, 27, 35, 9, -42};
//        byte[] byte2 = new byte[]{-39, 35, -34, -21, 114, -61, 30, 106, 46, -90, -36, 17, 110, -18, 102, -36, -128, -32, -46, 43, -6, -60, -103, -54, 3, 5, 22, 31, -18, -15, 23, 106, -66, -125, 47, 51, -85, -58, 106, 91, 91, 15, -101, 104, -27, -26, 74, 50, -15, -41, 113, 82, 97, 107, -114, -46, 70, 91, 115, -89, -77, 31, -75, -41, 126, 43, 17, 0, 17, 1, 0, 1, -2, 3, 3, 2, -84, -48, -57, 70, 6, -113, -11, -121, 96, -33, -14, 73, 107, -53, -30, 100, -45, 104, 83, -21, -110, 77, 24, 61};
//        byte[] byte3 = new byte[]{-41, -116, -30, -99, 90, -110, -88, -107, 4, 16, 111, -77, 106, 116, -125, -109, 125, 44, -22, 70, 54, -12, -107, -41, 96, 33, 74, -69, 113, -35, -63, -54, 54, -69, 56, -100, -62, -30, -36, 35, -72, 86, -109, -120, 0, 12, 83, 87, -50, -30, -91, 79, -38, 50, 62, 107, -89, -7, -46, -72, -68, 43, -128, 13, 9, 65, 23, -68, 80, -87, -33, -10, -111, 26, -40, -7, 43, 22, -104, -22, 22, -48, -42, 3, -18, -73, 90, -14, -102, 79, 41, 22, -89, 20, -96, -77, -70, -124, -9, 87};
//        byte[] byte4 = new byte[]{39, -9, 67, -115, 28, 86, 64, -3, -34, -55, 118, -4, -83, 61, 108, -80, -8, 95, 101, -86, -114, 19, -3, 43, -106, -54, 72, 61, 74, -58, -41, 18, -59, 23, -46, -109, 74, 117, 116, 63, -123, -94, 113, 73, -78, 89, -91, -106, -115, 6, 25, -54, 36, 85, -29, 55, -45, 85, 84, 46, -48, 106, -7, 119, -9, 46, -14, 28, -123, 27, 23, 36, -100, 127, 65, 23, 105, 127, 99, 42, -35, 99, -118, 49, 5, -127, 66, 25, 114, -40, 102, -7, 127, -69, 20, 89, 54, -100, -26, -7};
//        byte[] byte5 = new byte[]{7, -4, 50, 18, 44, -46, 44, -31, -103, -12, -117, 65, 120, -41, -98, 10, 35, 85, 69, -88, -17, -108, 102, 56, 67, -59, -45, -121, 127, -41, -36, 3, -110, 79, -31, -77, -23, -23, -69, 124, -23, 41, -55, 109, -45, 89, -64, 98, 90, 16, 91, 16, -30, 123, 46, -94, -17, 65, 83, -35, -16, -47, 84, -35, 43, -53, 5, -96, 40, 87, -66, 18, 109, 68, 73, -42, -11, -32, -97, 28, -75, -41, -113, -35, 102, 127, 108, -50, 15, -61, -74, 98, -68, -13, -108, 18, 98, 85, -77, 11};
//        byte[] byte6 = new byte[]{-61, -93, 63, 116, -58, 116, 121, 118, 82, 35, -76, 106, -108, -94, -27, -32, 46, -26, 99, 89, 1, 70, 92, 19, 14, -109, -123, 7, 31, 61, -37, 68, 49, -121, -62, -85, -44, -78, 21, -105, -53, 116, -107, -118, -124, 9, -23, 48, -84, 44, 53, -119, 31, -13, -101, 47, 111, 25, 79, -100, 50, -11, -113, -101, -48, -4, -116, -56, -10, 75, 27, 45, 105, 90, -125, 13, 118, 19, 24, 107, -99, 68, -53, -63, -21, 52, -27, -127, -31, 20, -42, 49, 10, -87, -106, 124, 71, -85, -116, -118};
//        byte[] byte7 = new byte[]{122, -120, 90, 49, -33, -33, -65, 108, -110, -121, -56, -21, -83, 36, -27, -60, -29, -80, 72, 1, 104, 70, -84, 54, 34, 99, 59, -86, 95, 57, -28, -41, 75, -92, -70, 48, 115, 117, 54, 93, -8, -73, 58, -57, -55, -26, 15, -28, 93, -56, 56, 82, 113, 120, 105, 55, -43, 56, 44, 34, -106, 46, -52, 88, -98, 124, 6, 62, 64, 127, -52, 23, 49, 88, 24, -83, -103, 112, -74, -39, -96, -46, -114, -76, 47, -93, 42, 56, -55, -70, -31, -71, -18, -60, 99, 98, 31, -36, 53, 13};
//        byte[] byte8 = new byte[]{77, -13, -62, -55, -90, 34, -99, -60, -84, 126, -16, 104, -105, -96, -120, 119, 18, -66, -76, 107, -127, 57, 121, -56, -60, 69, -115, 28, 127, 77, 70, 125, 68, 11, 127, -24, 109, 70, -29, 0, 127, -87, -22, -48, -102, 42, 75, 16, 84, 96, 45, 39, 58, 73, 97, 34, 33, -85, 25, 75, -53, 22, -90, -94, -46, -84, 32, -74, 76, -18, -45, -127, 76, -52, 53, 99, -12, -35, 23, -5, -62, -119, 7, 17, 50, -105, 43, 95, 82, -97, -102, 127, 31, 1, 87, -105, -123, -60, -121, -43};
//        byte[] byte9 = new byte[]{-20, 72, 75, -55, -91, 2, 80, 24, -73, 111, 47, -39, -104, 23, 111, 47, 96, -111, -86, 121, 70, 47, -56, -97, -38, 52, 21, -128, 106, 97, -32, 50, -95, -66, 122, 39, -69, 75, 126, -32, -109, -119, 49, 46, -45, -70, 85, 6, 89, -125, -56, -38, 80, 81, 8, -1, -118, -12, 59, 32, -76, 49, 117, 117, 120, 105, 97, 32, 40, 84, 104, 105, 115, 32, 105, 115, 32, 109, 121, 32, 112, 101, 114, 115, 111, 110, 97, 108, 32, 107, 101, 121, 41, 32, 60, 50, 54, 51, 57, 57};
//        byte[] byte10 = new byte[]{54, 48, 57, 55, 64, 113, 113, 46, 111, 109, 62, -119, 1, 56, 4, 19, 1, 2, 0, 34, 5, 2, 86, 111, -128, -37, 2, 27, 3, 6, 11, 9, 8, 7, 3, 2, 6, 21, 8, 2, 9, 10, 11, 4, 22, 2, 3, 1, 2, 30, 1, 2, 23, -128, 0, 10, 9, 16, -121, 98, -55, -127, -5, 88, -53, 84, 49, 68, 7, -1, 121, -45, -37, -30, 79, 53, -45, -52, 87, 92, 90, 14, -98, -128, -5, 114, 116, -20, -103, -71, 125, -26, -124, 96, 30, -99, 123, -65, -110, -65};
//        byte[] byte11 = new byte[]{126, -85, 2, -35, -51, 75, -48, -16, 2, -62, -95, -57, 83, -120, 42, -103, -115, 6, -31, 79, -53, 36, -64, 51, -8, -36, -27, 80, 55, 44, 30, 32, -39, 127, 79, 12, 6, -48, -125, -122, -112, 105, 39, 46, -24, -102, 103, 73, -69, -72, -121, 125, -78, -77, 14, 18, -36, -73, -62, 16, 21, -58, -90, 20, -11, 124, 53, -54, -128, 121, 120, -11, 40, 37, -64, 51, -121, -66, -102, 14, 41, 3, -56, -38, -34, -42, 26, -103, 96, -89, -9, -28, -112, 25, -124, -67, -46, -12, 111, 60};
//        byte[] byte12 = new byte[]{126, 63, 51, 101, -111, -109, -124, 18, 79, 77, 113, -76, 50, -93, -78, -68, -53, -63, 70, -32, -116, 121, -34, 24, -31, -7, -124, 61, 85, -120, 76, 114, 14, -102, 95, -116, 63, -63, -105, 112, 77, 4, 81, 38, 8, 39, -126, -41, -83, -64, -14, 63, -86, 39, 48, -36, 106, 55, -112, -119, 8, -83, 94, -96, 23, 95, 11, -39, 78, -114, 1, 57, 87, 12, -110, 22, 71, -71, -28, -69, -76, 103, 115, -9, 32, -21, 46, -4, 42, -20, 58, 72, 26, -41, -99, -122, -98, -98, -51, 20};
//        byte[] byte13 = new byte[]{97, 15, 37, -16, 23, -35, -93, 110, 65, -64, -47, 34, -102, -118, -57, 55, 12, 60, 6, -94, 73, -30, 74, -9, 26, -96, -80, 2, 0, 0, -99, 3, -66, 4, 86, 111, -128, -37, 1, 8, 0, -65, -74, 43, 37, 88, -17, 28, -65, -122, 102, 6, 58, 105, -80, -85, -101, -99, -88, -126, -57, 63, -110, 11, -81, -20, 102, 55, 11, 51, -115, 82, -11, -117, -1, -107, -17, -30, -37, -127, 65, 46, -67, -47, -8, 127, -57, 91, -31, -33, -21, -10, -70, -70, -17, 127, -67, 113, -3, -119};
//        byte[] byte14 = new byte[]{-9, 14, -122, 82, 123, -123, -109, -97, -80, -50, 37, -38, -127, 55, -53, -63, -43, -123, 86, -86, 61, -18, 76, 17, -12, -59, 105, -71, -126, 7, -32, -32, 3, 100, -67, -37, 27, -99, 50, 48, -6, -70, 56, 70, -112, 82, -28, 16, 25, -78, -40, -55, 64, -82, -81, -116, 26, -55, 67, -41, 76, -99, 94, -103, -7, -100, -127, 85, 124, 21, 117, 19, 90, -126, -85, -51, 75, -84, -77, -99, 30, -65, -77, 43, 24, -6, 120, -69, -13, -26, 24, -92, -65, -119, 124, -18, -86, -27, 44, 59};
//        byte[] byte15 = new byte[]{-94, -127, 88, -14, -15, 9, -110, -9, 36, 121, 107, -91, 90, 107, -48, 63, -127, -69, 50, -33, -110, -51, -13, 108, -77, -128, 117, 94, 88, 121, -55, 125, -1, -114, 81, 56, 12, 63, 81, -89, -2, 29, -21, 62, 94, 67, 69, 72, -101, 110, 38, 52, 75, -15, 108, -118, 73, 90, -44, -8, 90, -124, -32, 100, 122, -22, -23, 35, 60, 89, -114, 55, 12, -52, 89, -22, -120, -15, -49, 60, 103, -65, -65, 111, -128, 102, -121, 110, 31, 84, 99, 64, -103, 110, -103, -12, -127, 0, 17, 1};
//        byte[] byte16 = new byte[]{0, 1, -2, 3, 3, 2, -84, -48, -57, 70, 6, -113, -11, -121, 96, -65, -24, -93, -126, 40, -74, -104, -113, 104, 36, 3, 57, 105, 14, 32, -101, 91, -50, -12, 70, -101, 34, -50, -34, -89, -40, -27, 72, -71, 73, -36, 91, -103, -109, -87, 62, -124, -40, 106, 9, 18, -122, -24, -22, -73, 21, 36, -23, 46, -51, -15, 26, -75, 12, 23, 49, 117, -59, -90, 66, 74, -64, -101, -34, -6, 44, -20, -78, -92, 95, -2, 39, 42, -73, -1, -94, -69, -96, 10, -89, -27, -18, -90, -104, 91};
//        byte[] byte17 = new byte[]{64, 118, 46, 124, -83, 10, 60, -110, -115, -125, -79, 104, -114, -49, -57, 40, 49, 71, 51, 85, 13, 104, 72, 28, 43, -18, 70, 46, 28, -19, 89, -65, -119, 48, 110, 50, -23, -12, 118, 28, -96, -46, 85, -73, -49, -57, -102, 99, 103, 57, 123, 30, -109, -120, -107, 126, 17, -37, -122, -89, 4, -81, -71, 1, -90, 30, 5, -127, -53, 32, -88, -50, 45, -37, -31, -75, -70, 9, 96, -29, -98, 6, -90, 13, 87, -87, -82, 50, 8, 4, -8, -101, -24, -104, 32, 95, -7, -117, 96, 30};
//        byte[] byte18 = new byte[]{54, 94, -45, 89, -97, 108, -35, 85, 47, 93, 80, -82, -64, 14, -69, 76, -120, 102, -128, 21, 32, -39, 78, 40, 6, 98, 72, -48, -99, 96, 94, -46, -93, -112, -54, -84, -78, -8, -49, -107, 12, 83, 47, 120, -79, -30, -31, 13, -111, -40, -15, -99, 5, 29, 47, 108, -59, -113, 36, 69, 20, -36, -87, 38, -97, 50, 104, 47, -124, 59, 7, 86, 59, -94, -61, -68, -87, 82, -16, -91, -84, -36, 22, 25, -25, 91, 98, 117, -114, 115, -128, 46, 117, 69, 75, -3, -118, -8, 23, -3};
//        byte[] byte19 = new byte[]{-110, -56, 2, 76, -42, -102, 81, -41, 8, 83, 11, 102, 51, 37, 10, 86, 57, -38, -122, 19, 11, -17, 7, 93, 34, 91, -80, -41, 121, -68, 95, 53, -128, -1, 16, 66, 18, -11, -17, 36, -85, -14, 32, 4, -10, 56, -32, -76, -77, -15, 75, -49, 108, -62, -63, -26, 127, -69, -112, 20, 117, -90, -42, 67, 125, 47, -52, 104, -53, 116, 122, -42, -83, 28, -111, -71, 28, -94, -87, 39, 123, -123, 29, -30, -40, 105, -120, 59, -7, -101, 44, -118, -41, -78, -123, 64, 27, 122, 61, -106};
//        byte[] byte20 = new byte[]{33, -98, 33, -29, -113, -122, -46, 106, -117, -70, -82, -90, 118, -85, 43, 18, -9, -91, -37, -28, -54, -54, -4, -51, 21, -40, -106, -44, -43, -24, 19, -79, 87, 90, -40, 61, -126, -38, -98, 107, -38, -107, -4, 63, -80, 117, 42, -42, 10, 10, 49, 92, 62, -2, 25, -122, -99, 26, -96, -8, 80, 4, -125, 64, -47, 33, 38, -70, -69, 113, 63, -76, 94, -36, -54, -121, -107, -73, -99, -8, -106, -56, 77, 60, -54, 24, -15, 54, 110, 91, 50, 50, -91, -29, -44, 105, 47, -39, 85, -59};
//        byte[] byte21 = new byte[]{74, -89, 13, 103, 94, -7, -103, 18, -90, -58, -11, -69, -111, -24, -91, -22, 74, -33, 72, -65, 100, 121, 78, 43, -4, -98, -79, 14, 80, -20, 31, 75, -21, -85, 101, 37, 1, 40, -81, -40, -90, 29, 111, -6, -66, 19, 115, -125, -99, 120, 30, 5, -16, 37, 96, -50, -70, -123, -4, -28, -118, 12, -37, 84, -1, -77, -84, 46, -39, 110, 76, -59, 24, 23, -107, -21, -1, -25, 9, 27, -73, 28, 72, -102, -58, -51, 25, -85, -13, -58, 103, 51, 68, 28, 23, -103, 1, -16, 125, -30};
//        byte[] byte22 = new byte[]{-32, 72, 106, -5, -32, 36, 57, 123, -106, -86, -20, -60, 59, -3, 60, 13, 18, 49, -96, -95, -112, -23, -102, -61, -63, 32, 47, -1, -9, 53, -90, -11, -16, -122, 10, 109, 8, 33, 79, -1, 81, -16, 48, 112, -3, 106, -68, 46, -27, -108, 44, -21, 63, 37, -75, -74, -32, -48, 31, -39, -84, -56, 63, -84, 74, 34, 113, 40, -56, 6, 11, -64, 105, -114, 103, 122, 27, -44, -53, -72, 48, 82, -63, 23, -21, -108, -45, -14, -37, -10, -99, -119, 1, 31, 4, 24, 1, 2, 0, 9};
//        byte[] byte23 = new byte[]{5, 2, 86, 111, -128, -37, 2, 27, 12, 0, 10, 9, 16, -121, 98, -55, -127, -5, 88, -53, 84, -103, -12, 8, 0, -111, 40, -52, 9, 70, -79, 110, 36, -49, 31, 31, -39, -57, 73, -83, 64, 93, 122, -70, -23, -72, -93, 65, 54, -115, 53, 86, -17, 78, -55, -117, -26, 49, 114, 65, -80, 1, 35, 51, 74, -23, 79, -39, 112, 93, 67, 33, 13, 34, -126, -77, 107, 103, -31, 104, -72, -65, -27, -117, 62, 52, 41, -93, 3, -117, 40, -24, 26, -65, -101, -70, 66, -85, 58, -117};
//        byte[] byte24 = new byte[]{-16, 37, -16, 22, -47, -77, -71, -62, 52, 82, -44, 5, -73, 47, -51, -40, 16, -110, 92, -127, 2, 66, -56, -84, -52, 13, -42, -74, -41, -27, 96, 112, 105, -24, 111, -97, 113, 50, -49, 64, 94, -55, -93, 15, -16, -64, -1, -13, -48, -86, -1, 75, 53, -40, -12, -75, 115, -2, -9, -24, -117, -4, -45, 13, 78, -14, 80, -82, -66, -101, 101, 109, -8, 28, 82, 34, -91, 39, 74, -92, 4, 59, -53, -19, -38, 26, -44, 40, -13, -19, -120, -41, -91, 120, -49, 15, 71, -100, -59, 49};
//        byte[] byte25 = new byte[]{0, 78, 29, 5, 25, -80, -104, 122, 0, 85, 85, 59, -55, -110, 92, 53, -2, -77, -68, -58, -37, 0, -114, -86, 51, 75, -106, -25, 11, -68, -107, -117, 70, -52, 92, 59, -83, 48, -104, 38, 25, -100, -75, 9, 92, 115, 98, -46, -39, -2, -70, -18, -7, -38, -106, 53, -71, 24, -118, 14, -47, -10, 37, 113, 52, -104, 6, -118, -109, 83, -29, 96, 40, -28, 99, 8, -45, 26, -19, 101, -95, -80, 2, 0, 0, -107, 7, 62, 4, 86, 109, 55, -115, 1, 16, 0, -63, 22, -24, 85};
//        byte[] byte26 = new byte[]{-73, -82, 69, 11, 40, 98, 105, 53, -33, 14, 7, -75, -127, 81, -51, 126, 109, 109, -2, -70, 110, -107, -62, -82, 40, -15, 24, -61, -85, -116, -18, -83, -81, -68, -70, 100, 108, -123, 97, -21, -24, 30, -50, -7, -93, 126, -25, 120, -71, -104, 91, 98, -105, 88, -9, -76, -110, 99, -77, -2, -32, 37, -9, -105, 78, 76, 60, 45, 114, 116, -112, 76, -40, -115, 5, 92, 81, 2, -83, -115, -113, 71, -40, -64, 28, 113, 110, 99, -40, -87, 78, -25, -4, 121, 10, -55, -111, 33, 20, -2};
//        byte[] byte27 = new byte[]{-37, -5, 108, -112, -45, 5, 43, 120, -97, 42, 39, -127, 111, -13, 70, -79, 45, -48, 100, 81, -6, -16, -40, 54, 55, -39, -67, 113, 32, 48, 110, 58, 19, 100, -13, -102, -111, 59, -114, 1, 71, -123, -122, -107, -20, -80, -79, -52, -23, 90, -36, -110, 59, -1, 112, -24, 5, -4, -93, 122, -116, 52, -55, -57, -39, -45, 58, 35, -118, -79, 55, -4, 34, 89, 34, -55, 7, 56, 11, -48, 103, 41, -91, -87, -39, 58, -102, -26, 97, 102, 47, 124, -75, 31, 51, -5, -29, -122, 13, 3};
//        byte[] byte28 = new byte[]{123, -121, -75, 87, -117, -9, 9, -43, 72, -60, 66, -40, 66, 50, -123, -65, 126, -1, 38, -76, 1, 13, -60, -20, 15, -76, 1, 3, 0, 109, -16, 98, -26, 103, 84, 118, -3, -32, -11, 106, -54, -61, -1, -5, -35, 119, 21, -57, -72, 78, 18, -83, 45, 55, -64, -54, -9, 119, 72, 17, -34, -16, -82, -33, -76, 90, 36, -27, -110, -23, 35, 108, 9, 94, -128, -5, -5, -120, 5, -70, 32, 67, -31, 17, -96, 73, 51, -8, 17, 19, 33, -46, -113, -12, 21, -1, 77, -12, 62, -86};
//        byte[] byte29 = new byte[]{-66, -109, 12, -47, 90, 48, 121, 1, 126, -118, -40, 14, -84, 14, 22, -26, -47, 63, 27, 120, -102, -112, 100, -63, -11, 38, -10, 98, -42, -112, -94, 21, -116, 5, -46, 82, 99, 8, 54, -127, -119, 115, 26, 9, -72, 14, -86, 103, -109, -96, 29, -108, -4, -124, 92, 99, 101, -62, -104, 65, 80, 115, -33, -126, -46, 124, -117, 26, -64, -16, 103, 70, 96, 119, 67, -70, 19, 44, 11, 6, -30, 97, 92, -93, 25, -86, 27, -107, 83, -18, 32, -71, -57, -100, -85, 5, 15, -74, 2, -87};
//        byte[] byte30 = new byte[]{120, 82, 65, 42, -72, -109, 74, 86, 20, 67, -97, 111, 116, -75, -112, 112, -128, -81, 66, -14, 74, 106, 0, -47, 94, 41, 27, -32, 70, 74, 84, 121, -94, 9, 54, 81, 52, 44, 26, 41, -72, -16, 19, -109, -8, -112, -92, -31, -121, -7, -111, 119, 117, -42, 103, 56, 71, 33, -48, 83, -13, -18, 59, -20, -128, -48, -47, -15, 3, -92, -113, 112, -55, -37, 71, 56, -58, -22, -62, 94, 54, -70, -6, -102, -46, -120, -121, -117, 3, -68, -13, 56, 85, -57, 89, -107, 92, -84, -125, 58};
//        byte[] byte31 = new byte[]{-114, 26, -65, -107, -115, 97, 95, 63, 0, 17, 1, 0, 1, -2, 3, 3, 2, 72, 66, -46, -9, 111, 52, -46, 105, -31, 94, -80, -69, 53, 33, 105, -88, 30, 19, 94, 0, 123, 86, 82, -7, -25, -65, 14, -120, 115, -33, -25, -86, 64, -119, -84, 33, 53, 47, 123, -60, -42, 107, -2, -47, 45, 35, 119, 104, 16, 50, -125, 5, 4, -95, 60, -96, 78, 8, 98, 53, -62, 43, 127, 5, -23, -52, -105, -25, 115, -28, 92, -60, -31, 29, -56, -101, -18, -41, -115, 25, 123, -27, 67};
//        byte[] byte32 = new byte[]{-83, 12, 20, -112, -12, -53, 73, -27, -23, 76, -55, 53, -15, 31, -32, 100, -74, 63, -116, 46, -2, -86, 101, -3, 45, -99, 5, -107, 47, -75, 23, -98, 78, -88, 12, -106, -93, 73, 47, 38, 103, 33, 120, 64, 7, -17, -1, -64, 53, -63, 36, -114, -9, 91, 45, -111, -56, 72, 68, 99, -121, -50, 26, -110, -71, 2, 90, -122, 76, -35, 15, 120, 45, -80, 61, 61, -38, -75, -7, -79, 58, 11, -38, -77, 49, 25, -69, 46, -77, 33, -10, -77, 118, -11, 10, -13, 110, -85, 27, 122};
//        byte[] byte33 = new byte[]{-8, -87, 60, 1, 107, 126, -65, -64, 10, -127, -58, -21, -80, 82, -49, 125, 29, -25, -110, 34, -37, -108, -91, -67, -61, -27, 62, -117, -74, 29, -39, 17, 94, 59, 53, 26, -97, 73, 12, -58, -97, -101, 34, -65, -81, 16, -70, -80, -78, -47, -80, 124, -127, -73, 34, 19, 57, -19, 110, 120, -95, 23, 78, 26, 61, -58, -125, 78, 67, -44, -115, -119, -23, 55, -62, 4, 125, 110, -51, 76, 108, 54, 64, -105, -16, 27, -26, 102, -7, -37, -20, -61, -82, -74, -104, -60, 5, -29, 127, -113};
//        byte[] byte34 = new byte[]{10, -51, -46, -115, 110, -81, -103, -115, -36, -125, 83, -44, -97, -40, -103, -65, 63, -89, -98, -71, -40, -52, -116, -25, -38, -64, -15, 21, -81, -89, 18, -52, -123, 90, -55, -27, 108, 45, -22, 79, -126, -29, -22, 34, 42, 4, 66, 68, -61, 126, 57, 96, 98, -121, 3, -123, 50, -69, -64, 74, 51, -34, -109, 45, -82, 68, 79, 69, -22, 61, -11, -96, 68, -99, -75, 25, -34, 88, -95, 82, -39, 117, -87, -127, 34, 94, -14, 4, -81, 39, -100, 86, 21, -124, 58, -40, -60, 75, 55, 114};
//        byte[] byte35 = new byte[]{-61, 112, 114, -93, 72, 0, 87, 63, -8, 56, 45, 46, 106, 73, 24, -54, -50, 63, -56, 101, 29, -11, -24, 52, -21, 63, 92, 87, 37, -39, -2, 101, -71, -46, 32, -28, 120, -46, 84, 5, -112, -106, 81, 27, -50, 71, -75, 111, 55, 30, 70, -59, -63, -89, 18, -103, -3, -116, 98, 87, 9, -35, 124, 79, 96, -81, 48, -4, 124, 55, -12, -122, 112, -42, -112, -20, -23, 11, 65, 23, -69, 56, 86, -40, -124, -55, 84, 127, 76, 46, -127, -4, -63, 61, 109, 6, 13, 54, -3, 71};
//        byte[] byte36 = new byte[]{-108, -75, -102, -61, 97, -9, 46, 115, -30, 90, 110, -10, -40, 19, -39, -119, -79, 41, 8, -120, -28, 124, 127, 5, 106, -114, -113, 68, 41, -7, 118, 22, 67, 5, 85, 110, -5, -111, -60, 90, 18, -21, -75, -26, -114, -73, -28, 26, -17, -46, -2, -23, 2, -72, 16, 9, -128, -63, 35, 100, 43, 97, -20, 65, -35, -26, -90, -15, 13, -77, -7, 63, 124, 94, 80, -10, 82, -128, -77, -109, 81, -22, 114, 88, 89, 13, 45, 33, 70, -85, -32, 45, -28, -28, 27, -54, 75, 66, -3, -59};
//        byte[] byte37 = new byte[]{-72, -101, 127, 24, 46, 51, 68, 26, -128, -79, 108, -48, 91, 83, -45, -36, 104, 94, -17, -58, -49, -76, -42, -76, 75, -36, -109, 60, -114, -110, -100, 54, 39, -1, 13, -85, -7, 119, 102, -1, -107, -80, -59, 7, 123, 68, 111, -44, 70, -32, 7, 92, 100, -4, -24, 59, 34, 34, 80, 122, 123, 109, 13, -37, 55, 120, 48, -84, -78, 42, -2, 28, 123, 34, -120, -50, -89, -94, 60, -102, 28, 126, 75, -101, -113, 110, -70, 36, 58, -52, -86, 62, 45, -119, -14, -83, 19, -27, -115, -43};
//        byte[] byte38 = new byte[]{84, 76, -124, 28, 52, 33, -78, 119, -9, 114, 88, 127, -87, 73, -29, 58, -50, -46, 87, 111, 55, 38, 19, 37, -107, 54, -64, 90, 108, -74, -1, -7, -38, 21, 88, -124, -17, 111, 4, 51, -49, 21, 0, 9, -43, 31, 42, 24, 21, 0, 82, 114, 50, -22, -1, -93, -12, -84, 95, 88, 33, -9, 65, -82, 87, 15, 14, 10, -108, -102, -60, -22, -78, -13, 96, 11, 24, 79, -107, -64, -19, -75, 17, 42, -7, -59, -100, 40, 94, 97, 84, -111, 6, 46, -36, 25, 47, -91, 11, -60};
//        byte[] byte39 = new byte[]{-82, -85, 59, 1, 66, 69, 57, 93, -86, -15, 14, 45, -79, 79, 94, -104, 40, 35, 26, 108, -64, -63, 51, -75, -14, -32, 65, -46, 74, 124, 106, -97, 113, -113, 15, -40, 91, 123, 77, -112, -99, 87, -40, -121, -7, 119, 88, -25, 96, 103, 35, 3, 120, -12, -125, 121, 117, 101, 77, 63, -62, -86, -86, 125, 104, -51, 18, -89, -114, -34, -64, -14, -73, 77, -113, 49, 85, 33, -122, -11, -37, 123, 93, -47, -65, 112, 81, -46, 83, 121, -88, 124, -127, 101, 112, -95, 78, 54, 62, 58};
//        byte[] byte40 = new byte[]{28, -76, 48, 31, 60, 79, -11, 79, -70, 64, -99, -128, -101, 84, -112, -32, -115, -90, -71, 92, 29, -9, 97, -103, 102, -79, -45, 118, 31, 29, -59, 40, -29, 102, -97, -116, 2, 62, 30, 109, 114, 79, 77, -51, -64, -56, 31, -103, 101, 54, -51, 98, -23, -42, -109, 28, 25, 113, -102, -12, -64, 8, 127, 96, 34, 14, -103, -117, 114, -43, 10, 82, 61, -110, -120, -80, 63, 116, 82, 114, 11, -52, 110, 69, 55, 14, 58, 29, 79, -42, -108, -9, -120, 40, -36, 111, -112, -96, 26, -28};
//        byte[] byte41 = new byte[]{49, -126, -68, 29, 4, 116, -51, 58, 61, 61, 62, 20, -68, -109, 46, 82, -31, 89, 3, 111, -124, -13, -17, 19, 95, 56, -63, 78, -26, 29, -121, -14, 19, -90, -97, 27, -45, 11, 40, 66, -30, 32, -42, -20, 60, 123, -36, -98, -52, 104, -52, 89, 19, -123, -44, 46, 95, 105, -61, 124, -121, 15, -87, 12, -103, -74, -91, 85, -23, -53, -109, 49, -119, 121, -95, 57, 83, -12, 96, -32, 7, 110, -13, -27, 126, 105, -17, 86, 87, 91, -75, 117, -23, -79, -92, -89, 48, 0, 1, 71};
//        byte[] byte42 = new byte[]{-36, 21, -23, -80, -39, -69, 107, 14, -72, -15, -100, 53, 20, 79, 123, -64, 29, 36, -19, 126, 122, 60, 25, 107, 81, 61, 57, 20, -78, -18, 96, -84, -9, -19, 45, -72, -84, 69, 8, 87, -40, 28, 23, 60, -74, -3, -10, 65, -127, 120, -4, -16, -83, -97, -52, 122, -95, -54, -94, 41, -71, 63, -75, -48, 93, -105, -37, 110, -95, -78, 62, -24, 118, -39, 41, -125, -21, 14, -43, 66, -9, -94, 69, -26, 37, 62, 68, 14, 77, 44, 7, -1, 43, 44, 31, -38, -124, 122, -125, 35};
//        byte[] byte43 = new byte[]{107, -30, -66, -49, -44, -84, 0, -77, -2, -121, -115, 29, -7, 95, -58, 96, -90, 8, -112, 80, 110, 25, 26, -29, 104, 118, -113, 8, -39, -100, -43, 37, -103, 114, 26, 119, -91, -43, 111, 61, 103, -86, -115, 64, -30, -56, 111, -45, -94, -39, 24, -58, 125, -43, -24, 78, 60, -24, 44, -42, -19, 67, -22, -73, 44, -79, -79, 110, -76, 23, -14, 117, 85, 3, 22, 46, -8, -55, 112, -38, -113, -111, -78, 30, -104, -75, -91, 5, 24, 119, -60, -50, -52, -25, 69, -89, -19, -12, -95, -8};
//        byte[] byte44 = new byte[]{-123, 96, -32, 106, -95, -94, -121, 87, -79, -15, -66, -100, -61, 16, 49, -78, -116, 63, 23, 3, -67, 92, -39, -65, 24, -72, -123, 9, 114, 112, 67, 68, -13, -40, 80, -92, 100, 74, 124, -97, -89, -76, -76, 42, -27, -92, -113, -27, -80, -113, -27, -118, -101, 117, 117, 105, 120, 97, 32, 60, 120, 105, 97, 120, 105, 97, 111, 108, 105, 95, 50, 48, 48, 53, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 62, -119, 2, 61, 4, 19, 1, 10, 0, 39, 5, 2, 86, 109, 55};
//        byte[] byte45 = new byte[]{-115, 2, 27, 3, 5, 9, 7, -122, 31, -128, 5, 11, 9, 8, 7, 3, 5, 21, 10, 9, 8, 11, 5, 22, 2, 3, 1, 0, 2, 30, 1, 2, 23, -128, 0, 10, 9, 16, -77, 119, -13, 15, 55, 80, 68, -38, 36, -113, 15, -2, 59, -94, 51, -13, 88, -11, 109, 63, -66, -47, -104, 105, -19, -126, -108, 82, -18, -91, -76, 47, -96, -2, -7, -30, 80, -44, -74, 27, -92, 77, 38, 85, -109, -10, -96, 115, -32, -124, -60, -13, 15, 12, -52, 42, 57, 30, -87, -37, 29, 63};
//        byte[] byte46 = new byte[]{32, 52, -21, -128, -60, 86, 30, -118, -73, 6, -76, -37, -101, 44, -86, 14, 67, 12, 106, 46, -3, 84, 82, 75, -102, -52, 4, -24, 108, -114, -85, 92, -68, -94, -38, 126, 108, 72, 56, -112, 92, 127, 79, -61, 70, -8, -102, -49, 97, 75, -98, -20, -80, -87, -25, 64, 18, 52, -123, 96, -80, 75, -50, -47, 88, -37, 97, -16, -104, -57, -57, 96, -120, 86, -8, -107, 44, 36, 74, 99, 3, 85, -106, -72, 61, 26, 124, 48, 19, 33, -38, 88, -100, 61, -63, -72, 53, -95, 96, -107};
//        byte[] byte47 = new byte[]{-15, 100, 37, 44, 71, 40, 73, -11, -85, -17, 59, 66, -33, 121, 71, 7, 5, -76, -4, -41, 51, 92, 33, 14, -88, -23, -117, 72, -55, -105, -83, -44, 67, 113, -57, 37, -46, 15, 117, -26, 41, -6, 41, -73, -61, -90, -114, 95, -105, 24, 113, -52, 90, 7, 96, -102, 99, -8, 90, -41, -81, 43, -115, -89, 30, 60, 94, 28, -118, -93, 59, -49, 87, 56, 13, 30, 29, -115, 126, -9, 94, -89, -99, 3, 25, -12, -128, 70, -122, -21, -11, 54, -15, -9, 50, 21, 53, 69, -109, -46};
//        byte[] byte48 = new byte[]{115, -48, -117, 62, -120, -103, 50, -16, -16, -19, 0, -98, -45, -105, 64, 118, -12, -62, -127, -82, 80, -2, 9, -50, 101, 105, -55, -83, 87, 50, 86, 114, -122, 0, -10, -74, -68, 2, -35, -80, -116, 64, 89, 115, 114, 75, -118, -67, -23, -1, -100, -56, 64, 3, 30, -85, 36, 104, 40, -19, 97, -113, -48, 89, -43, 46, 91, -30, 31, -61, -18, 116, 67, -90, 73, -103, -94, -90, -92, -111, 59, -4, -1, -110, -58, 19, 66, -101, 12, -3, 45, 95, -89, 73, -84, -80, -21, -121, 69, 6};
//        byte[] byte49 = new byte[]{3, 21, -93, -48, -121, 71, -39, -91, 23, 120, 25, -59, 20, -82, -61, -75, -13, 29, 111, 95, -123, 12, 18, 34, -75, -7, -99, 61, 21, 27, -79, 95, 6, 114, -36, -35, 34, -65, 80, 91, 46, -15, 98, 10, 86, -31, 98, 98, 102, 89, 8, -80, -105, -84, -24, 123, -75, 21, 123, 103, 47, -37, 7, 28, -65, -108, 61, 77, -73, 98, 113, -42, -24, -82, 111, -12, 68, -102, 126, 100, 10, -126, -94, 1, -71, 127, -10, 91, 88, -106, 123, 92, 28, -42, -121, -98, -68, 106, -113, -128};
//        byte[] byte50 = new byte[]{-43, -52, 75, -54, -27, -46, -126, -50, -85, -24, 36, 33, -45, 33, -6, -128, 102, 114, 1, 82, 14, -116, -17, -114, 34, 69, 40, -103, -121, -80, -103, 108, 10, -121, -100, 91, 31, -85, 82, -123, -13, 80, -122, 118, 20, -62, -90, 73, -2, 106, 116, 61, 44, 127, -76, 20, 0, 32, -81, 19, 36, -23, -80, 2, 0, 0, -99, 7, 61, 4, 86, 109, 55, -115, 1, 16, 0, -48, 126, 59, -115, -93, 85, -118, -52, 79, 102, 92, 66, 110, -91, 56, -24, -67, -84, 123, -60, 8, -45, -119};
//        byte[] byte51 = new byte[]{127, -48, 75, -96, 25, -52, 90, -23, -110, -55, -45, 91, -114, 50, -6, -103, 56, -17, 17, -8, 123, -46, -66, 90, 15, 61, -33, -119, -58, -27, 75, -4, -115, -41, -73, 50, 108, 6, -21, -49, 93, 95, -53, -57, -117, 85, 15, -97, -86, 78, 103, -44, 9, -83, 41, -90, 34, 8, -9, 122, 51, -73, -72, -33, 123, 66, 30, 20, 25, -105, 105, 58, -5, -99, -5, -11, -46, -78, -4, -8, -12, 66, 43, -65, 13, -56, 98, 67, -55, 86, 10, -8, -102, 37, 102, 102, -53, 12, 45, -86};
//        byte[] byte52 = new byte[]{115, -94, 61, -40, -118, 43, -29, -57, -111, -102, 32, 93, -47, 119, -13, -46, 9, 4, 50, 117, -71, 35, 26, 96, 90, -68, -110, 117, -111, 43, -94, 94, -61, 56, -26, -119, -46, 126, -53, -60, 117, 29, 39, 66, -28, 16, 60, 124, 104, 1, -47, 3, 112, -6, -40, -61, -56, -53, 19, 90, 21, -120, -50, 52, 116, 62, -1, 120, -83, -45, 86, 95, -39, 11, 40, -9, -100, -122, 19, 47, -52, -83, 54, -62, -64, -39, -88, 15, -28, 85, -64, -19, -6, -83, -121, -41, 66, -41, 102, 0};
//        byte[] byte53 = new byte[]{-78, 46, 34, -69, -105, -115, 44, 78, 41, 32, -104, -47, -69, 31, -67, -69, 28, -41, -82, 16, 51, 114, 106, 100, 119, 67, -67, 8, -66, 112, -19, -65, 82, -50, -24, 77, -57, -122, 68, 45, -89, 49, 110, -98, 98, -60, 109, 108, 112, 35, -9, 111, 126, 90, 113, -58, -64, -76, -58, 75, 33, -99, -4, -81, -35, 46, 88, -80, -103, -98, -58, -76, 72, 99, 92, -115, -90, -110, 81, 56, 63, 2, -25, 77, 19, 33, -34, -102, -98, 72, -13, -41, 102, 34, -27, 0, -94, 70, -128, -43};
//        byte[] byte54 = new byte[]{83, 83, -68, -1, -91, -37, -12, 31, 42, -103, 75, 80, -78, 76, 87, -1, 41, 98, -89, -14, 7, 61, -124, 125, -73, 5, -102, 9, -15, 34, 19, 37, -45, -109, -54, 62, 58, 59, -33, 99, -112, -78, 17, -76, -99, 87, 39, -2, -40, 48, 46, -61, -31, -19, 14, -42, 2, 61, 112, -49, 58, -111, -43, 28, -125, -44, -51, 124, -91, 3, 68, -112, 47, -96, -82, -73, 27, -109, -69, 51, 115, 66, 49, -121, 30, -62, 35, 105, -106, 24, 121, -15, -17, -7, 45, 28, 31, 95, -77, 13};
//        byte[] byte55 = new byte[]{92, 2, -121, -11, 2, -8, 62, 54, -19, 103, 51, -24, 46, -112, -58, 16, 28, -121, -96, -34, -31, -70, 96, -8, 97, 42, 87, 15, -125, 69, 57, -70, -20, -79, -62, 81, -60, -118, 37, 39, 126, -88, 12, 49, 34, 3, -125, -55, -50, 108, 56, -115, 110, -92, 18, -60, -58, 36, 37, -42, 90, 113, -26, -2, 125, -59, 97, -4, 1, 27, -49, 91, 17, 70, 111, 50, -17, 107, -24, 10, 73, -107, 25, 81, -16, 16, -2, 125, -93, 0, 17, 1, 0, 1, -2, 3, 3, 2, 72, 66};
//        byte[] byte56 = new byte[]{-46, -9, 111, 52, -46, 105, -31, -93, -62, 26, -36, -18, -46, 77, -116, 51, -22, -120, 115, 89, -15, -105, -102, 115, -98, 100, 107, 125, 63, 3, -48, -70, 27, -55, -45, 112, 95, 95, -72, 18, -65, 33, 104, 8, 73, 100, -106, -79, 33, 21, -40, -107, -124, -111, 0, -71, 72, -41, 97, 9, 90, -105, -102, 4, -92, -47, -79, 30, -83, 77, 25, 9, -20, -112, -46, 9, 41, -128, -29, -121, 38, -2, 111, -66, -89, -56, 22, -110, 93, 72, -80, -86, -45, -51, 93, 106, 13, -124, 13, 2};
//        byte[] byte57 = new byte[]{15, 67, 49, -70, 119, -86, -121, -74, -4, -74, -5, -36, 127, -121, 36, 110, 120, -125, -17, 101, 72, -119, -70, 60, -38, -51, 1, -59, 101, -37, -39, -31, -24, 52, -113, -65, -19, -9, 22, 52, -108, -85, 21, -9, 71, 113, 49, 1, -114, -46, -107, -92, 94, 103, -79, -112, -75, 65, -17, -51, 92, 113, 68, -9, 32, -20, -28, -105, 30, -33, 48, -64, 3, 88, -50, -99, -81, -40, -12, 18, 91, 60, -122, -57, 32, 40, -66, -78, 40, -59, -56, 98, 25, -111, 105, -80, 21, -103, -104, -22};
//        byte[] byte58 = new byte[]{-33, 118, -126, 39, -92, 123, -29, -78, -118, -88, 2, 50, 127, 63, 26, -58, 84, -15, 10, -123, -114, 77, 92, -48, 119, -60, -102, -61, -97, 104, -117, -93, 28, 77, -60, -25, -86, 72, -46, -124, 118, 79, -44, -100, -53, 102, -45, 14, -96, -14, 72, 63, 37, -124, 41, -120, -5, 44, -20, 121, -45, -7, -106, 47, -99, 41, 102, 118, 64, -91, -71, 47, 99, -82, 92, -121, -9, 123, -106, -70, 55, -4, 96, -77, 7, 98, -117, 41, -72, -97, 40, 54, -87, -80, -17, -55, 11, -2, 89, 18};
//        byte[] byte59 = new byte[]{8, -40, 27, -70, 89, 117, -126, -110, -60, -54, -107, -17, 108, -87, 2, -52, 38, 51, -49, -25, 22, 9, -84, -5, 99, 0, -38, -75, -6, 113, 1, 111, 64, -121, -56, 115, 103, -82, 104, -45, 8, 18, 11, 65, -110, 127, 66, 8, -57, 29, 49, 49, 33, 2, -4, -33, 27, -5, 87, 43, -86, -44, 7, 65, -61, -114, 41, -3, 91, -106, -26, -68, -91, -41, -120, -93, 87, 59, -74, -70, -14, -54, 94, 108, 4, 58, -39, 1, -91, -127, 52, -124, -127, 83, -41, -61, -109, -95, -96, 121};
//        byte[] byte60 = new byte[]{-116, -114, -122, -12, -16, 119, -43, 105, 17, -50, 84, 113, -35, -9, -95, -114, 14, -38, -114, -53, -72, -33, 45, 105, 62, 24, -128, 20, -58, -115, -107, 94, -127, 103, -77, 59, 48, 102, 108, -81, 9, 1, -89, -103, 48, 16, -59, -7, 0, -126, 109, 73, 108, -80, 36, 51, -73, 25, -32, -72, -3, -98, -68, 121, 9, 83, -46, -31, 89, -49, 97, 90, -123, -44, 121, 78, 47, -31, 63, -108, 81, -73, 126, 46, -2, 88, 59, -19, 84, 64, -13, 83, -71, 90, -101, -115, 109, -44, 3, 113};
//        byte[] byte61 = new byte[]{94, 82, -73, 89, -53, 89, -63, 30, 108, -6, -104, -74, -12, 106, 78, -37, 42, -67, -95, -87, 59, -120, 92, -78, -17, -15, -10, 15, 110, 66, 66, 70, 99, -37, 7, -32, 37, 106, 77, 65, -124, 119, 124, -119, 82, 121, 57, -73, -24, 107, -29, 39, 68, -95, -75, -24, -36, -63, 113, 121, 20, -70, 45, 123, 118, -41, 63, 113, -101, 4, -62, 37, 96, 2, 59, 67, 84, -40, -32, 93, 73, -65, 92, 34, 47, 118, 93, -40, 71, -119, -76, 123, 119, 110, -124, 122, 118, -85, 91, -40};
//        byte[] byte62 = new byte[]{44, -103, -48, 53, 47, 68, -37, -128, 51, -53, -39, 82, -50, -2, -78, 34, -50, -91, 104, -49, 24, -123, 40, 120, 17, 36, 20, -121, 103, 106, 3, -109, 120, 51, 91, -87, -69, 122, -2, 47, 101, 97, -64, 73, -119, 97, 109, 29, 89, -107, 122, 116, -74, 40, -3, -48, -70, -37, 53, 81, 89, 40, 118, -63, 2, 39, 12, -71, 125, -62, 20, 39, -45, -93, 52, 4, -106, -10, -48, -56, 106, -36, 63, 116, -10, 64, 21, -128, 89, -62, 91, -101, -81, 15, -111, 100, 113, -41, -7, 98};
//        byte[] byte63 = new byte[]{-125, 41, 104, -127, 109, -126, -44, 78, -64, 27, 45, -100, 91, 118, 59, 66, -69, -2, 34, 58, -16, 104, 86, 31, -58, -49, 120, -10, 21, 108, -27, 93, 100, -120, 87, 124, 28, 115, 106, 7, 126, 105, 76, -104, -126, -108, -40, -85, 92, 104, -111, -108, 47, -39, 26, 113, 40, 90, -88, 26, 31, 58, -91, -53, -26, 97, 94, -15, 116, -94, 96, 25, -23, 71, 34, 67, -24, 115, 100, -32, 94, -75, -41, -42, -63, -12, -89, -6, -128, 63, 85, -99, 83, 51, -58, 16, -83, 21, 52, 65};
//        byte[] byte64 = new byte[]{-125, -92, -10, -59, -117, 109, 72, 34, -89, 50, -8, -61, -65, 34, 49, 50, 45, -72, -108, 66, 92, 70, -21, -107, -11, -89, 26, -23, -98, -66, 79, -77, -124, 99, -88, -127, -94, 105, -105, 126, 89, 4, -73, 123, 116, 32, 0, -114, -84, 68, -6, 87, 118, -10, 84, -33, -55, -14, 26, 41, 63, -126, 98, 84, -7, 108, -62, -52, -47, -100, -70, -94, -40, -60, 34, 101, -21, 102, -52, 33, 27, -85, -73, 20, 60, -5, -35, -82, -121, -72, -109, 77, -43, -100, 109, -48, 95, -75, -101, -14};
//        byte[] byte65 = new byte[]{40, -100, -69, -123, -124, 38, -24, -76, -110, 23, 2, -32, 80, 62, 109, 49, 64, 37, -49, -80, -80, 118, 92, 61, -48, 9, 13, 9, -2, 10, -39, 0, -50, -94, 116, 26, -41, 42, -49, 118, 94, 120, -84, -24, -105, 13, 11, -40, -46, -19, 68, 73, 64, 88, 126, 46, 92, 49, 71, -42, 100, -128, 99, -60, 58, -6, 105, -113, 29, -32, 20, -109, -46, 71, 12, 17, -57, -40, 86, -1, -127, 2, -96, -108, 58, -41, 112, -18, -92, 58, 102, 79, 112, 111, 65, -13, 41, 122, -56, -106};
//        byte[] byte66 = new byte[]{120, 68, -87, -4, -74, -27, 2, 13, 48, -49, 40, -89, 2, -4, -87, 106, -19, 8, -45, 104, 51, -20, 76, 56, 94, -42, 78, 89, 107, -75, -85, 51, -55, -117, -97, 107, 7, -47, -55, 122, 3, -7, 92, 16, -13, -105, -122, 80, 58, -70, -99, -115, 99, -64, 67, 78, -51, 45, -43, -15, -86, 72, 59, 96, 33, -16, 113, 125, -51, 86, 110, -116, 118, 63, -75, -67, -11, -126, -89, -66, 65, 27, -49, -105, -14, 123, 16, 48, -54, 87, -115, -99, -84, -4, 55, -62, -101, -24, -13, -39};
//        byte[] byte67 = new byte[]{40, 65, -92, 64, -11, -34, -11, -99, -114, 56, 98, 103, 48, -104, 74, 6, -44, 44, 46, -83, 55, -7, 6, -75, 6, -12, -64, 35, 48, 108, -48, -27, 55, 86, -63, 96, 67, -95, -126, -128, -96, -70, -93, -128, 29, 23, 118, 15, -97, -67, 75, -8, -41, 127, 122, 70, 112, 1, -22, -91, -122, -16, 105, 38, -16, 44, 11, -69, -113, 10, -48, -9, -86, -7, 101, -95, -42, 48, 72, 66, -104, 52, 101, 99, 72, 66, 70, 107, 57, -103, 79, 2, -105, 75, -23, 11, 126, 17, -40, 43};
//        byte[] byte68 = new byte[]{-88, 48, 12, 82, 58, -122, -91, 16, 46, -11, -120, -86, -75, 73, 18, -46, 22, -74, -35, 77, 120, -51, -22, 21, -47, -56, 105, 72, 124, -46, -23, -42, -125, 63, -76, 17, 38, 70, -86, -98, 39, 10, 104, -73, -69, 39, -45, -112, -106, 79, 96, -111, 62, -75, 99, 60, -118, 0, -44, 65, 41, 79, 104, -8, 94, 42, 104, 39, -109, 11, -28, 53, -101, 33, -109, 29, -126, 40, -92, 59, -82, -32, -51, -40, -126, 69, 14, -6, -3, 88, 84, -24, -127, -122, -41, -119, -3, 80, 125, 100};
//        byte[] byte69 = new byte[]{45, 47, -1, -21, -88, -69, -62, 35, -50, 67, -24, -118, -63, -55, -110, -19, -80, 87, 30, -40, 1, -71, -119, 2, 37, 4, 24, 1, 10, 0, 15, 5, 2, 86, 109, 55, -115, 2, 27, 12, 5, 9, 7, -122, 31, -128, 0, 10, 9, 16, -77, 119, -13, 15, 55, 80, 68, -38, 117, -108, 15, -3, 26, 103, 49, -68, 101, -53, 47, 69, -54, 13, -59, -113, 49, -10, -87, -10, -48, -122, 108, 26, -29, -59, -21, -22, 23, 44, -33, -31, 78, -114, -46, -10, 27, 41, -114, -83, -5, -69};
//        byte[] byte70 = new byte[]{103, -26, -52, -63, 78, 123, 20, 49, 48, 53, -125, 48, -31, -95, 88, 35, -22, -13, 23, -65, -20, 92, 69, 113, 67, 27, 94, 6, 35, -7, -70, 118, 4, 0, 110, -79, 98, -23, 56, -71, -9, -49, 117, 84, -3, 12, -40, 87, -106, 69, 106, -50, 4, -52, 77, 90, 109, -23, 77, 35, 85, 0, -119, 21, 32, -3, -56, 111, -121, 47, -10, 55, -15, -8, 115, -108, 1, 66, -33, 107, -111, -8, -1, 48, 75, 117, -126, -54, -115, -68, 103, -40, 18, 81, 127, -71, 127, 110, -112, 89};
//        byte[] byte71 = new byte[]{104, 95, 30, 127, 49, -4, -39, -40, -48, 77, -95, -36, -7, 120, -55, 75, -109, 24, 25, -4, 126, -91, -67, -98, -32, -23, 72, 45, 101, -75, -98, 73, 97, -97, 33, 83, 35, -32, 39, 22, 88, -70, 120, -99, -100, 37, -13, 80, -87, 54, 127, 82, -61, -128, -6, -66, -35, 38, 126, -107, -48, 110, 48, -70, 101, -65, -33, 73, 99, 95, 92, -128, 97, 109, 84, 92, -98, -40, -62, -38, -5, 15, 58, -86, -67, 115, 21, 11, -125, 92, 44, 53, 21, -56, -128, 100, 46, -48, -18, 45};
//        byte[] byte72 = new byte[]{-91, 21, -32, 62, -116, 104, 64, -86, -61, 120, 110, -66, 95, -33, 53, 92, 57, 44, 27, 95, 12, 112, -35, -89, 59, 85, -63, -75, -23, -47, -57, -46, -109, -68, 22, 92, -9, 50, -84, 46, -36, 119, 127, 46, 18, 60, -44, -95, -42, 11, 7, -69, 102, 8, -25, 9, 68, -53, 65, -72, 89, -94, -19, -42, -47, 55, -20, 111, 83, -23, -93, -61, 96, 69, 57, -45, -98, 3, 120, 39, 82, -98, -35, 111, -120, -83, -70, 99, -104, -31, 33, 120, 73, 20, 79, -30, 63, 82, -71, -22};
//        byte[] byte73 = new byte[]{-46, -116, 92, -118, 18, 24, 115, -12, 108, -80, -8, -27, 36, 40, -83, 3, -80, -10, 124, 8, -19, -87, -33, -123, -9, 51, 123, 1, 68, -76, 69, -48, 93, -105, 26, 12, -89, -45, -114, 110, -67, 75, 33, -22, 75, -84, -63, -29, 123, -6, -38, 26, -23, 47, 64, -95, 72, -86, 17, -126, 19, -40, -32, 121, -43, -125, 112, 12, -15, 61, 78, 108, -47, -71, -127, -117, 117, -31, 27, -27, -33, -83, 24, 14, -31, 90, -95, -42, -99, 60, 61, 82, 105, -7, -9, 12, -42, -72, 17, 114};
//        byte[] byte74 = new byte[]{-18, -82, 95, -13, -31, 54, 85, -75, 4, -71, 101, -46, 30, 124, 61, -32, -14, 62, -91, -104, 29, -24, -86, -44, 29, 60, -125, -34, 17, -73, 59, -107, -64, -83, -3, -62, -11, -41, 29, -57, 125, -91, 123, 108, -105, -126, -96, 10, 71, 1, -64, -101, 87, -96, -31, 12, 29, 74, -85, 117, -117, -8, -36, -127, 39, -95, 54, -99, 59, -41, 49, -11, 92, -26, -80, 2, 0, 0, -107, 3, -66, 4, 86, 109, 69, -69, 1, 8, 0, -21, 70, 5, -49, 17, -122, 122, -22, -80, 67, -100};
//        byte[] byte75 = new byte[]{-106, 52, 30, 58, 26, 8, -44, 51, -43, -42, 114, -28, -98, -74, -58, 43, -79, -26, -68, 86, -43, -6, -59, -21, 14, -37, 125, 125, 88, -13, -3, -21, 26, -64, -103, 47, 5, 27, 119, 103, -13, 1, -6, -80, -8, -52, -63, 103, 3, -23, -127, 14, -67, 35, -55, 39, 58, -71, -8, 60, 27, 13, 117, -124, -57, -95, 66, -125, 18, -119, -74, -43, 91, -101, 82, -118, -19, 89, -80, 24, 36, -80, 46, 116, -23, -26, -10, -82, 70, 125, 34, -120, -25, -119, 127, 117, 116, -81, 26, -92};
//        byte[] byte76 = new byte[]{-125, -99, -21, 17, -22, 55, -99, 108, 115, 97, 86, 74, -21, -69, 94, -104, -4, -65, -128, 8, -50, 39, 124, 76, -96, 85, -76, -97, -45, 21, 89, 42, 74, 121, 75, -4, -115, 111, 50, 50, -54, -9, 87, -122, 108, 120, -18, -36, 27, -108, -40, 38, 1, -19, 48, -17, -6, -9, 102, -118, -2, -111, -25, 70, -112, 23, -6, 89, -57, -9, -69, -20, -112, -15, -110, 9, -83, 61, -65, 62, 56, -111, -55, -15, 79, -45, -90, -90, 125, 94, 81, -116, -61, -127, 97, -59, 4, -47, -45, -56};
//        byte[] byte77 = new byte[]{127, 55, 71, 28, 113, 79, -64, 79, -65, 74, -23, -49, 65, 124, -54, -56, 85, -128, 32, 64, -7, 112, 70, 88, -39, -68, 52, -5, -18, -125, -103, 127, -70, -28, 25, -70, -59, -14, -2, -50, 65, -14, 77, -77, 117, 0, 17, 1, 0, 1, -2, 3, 3, 2, -81, 81, 42, 48, 46, 8, 28, -16, -31, 0, 72, -114, -104, -102, -10, 118, 53, -67, -33, 76, 26, 126, 29, 58, 9, -104, 0, -116, -31, -79, -106, -7, 99, 73, -111, 58, -100, -55, 105, -63, -55, -59, -128, -86, 22, -9};
//        byte[] byte78 = new byte[]{98, 112, 122, -57, -119, -119, 90, -77, -32, 48, 71, 96, -96, -17, -83, -55, -124, 87, 93, -106, 58, -13, -88, -47, -13, 122, -51, 25, -35, -118, 49, 82, -112, 45, 50, 4, 41, 26, 13, 10, -86, 68, -8, -84, -23, 17, -73, -79, -2, -41, 21, 84, -6, -79, -64, -79, 115, -67, 62, 12, 34, 61, 67, -85, 77, 98, -58, 83, -17, 123, -104, -103, 74, 21, -44, -118, 18, -51, -23, 107, 63, 6, -112, 108, -116, -36, -12, -110, 6, -99, 51, -67, 41, -6, 46, -103, 121, -24, 31, 42};
//        byte[] byte79 = new byte[]{50, -34, 97, 85, -91, 29, -101, -107, -90, 95, 50, 58, -6, -115, 117, -4, -85, 28, 122, -13, -67, 37, -100, 29, 110, -3, -111, -111, 13, -104, 55, -6, 61, -6, -85, -36, 89, 87, 37, -110, 99, -101, 73, 120, 116, -102, 88, 68, 55, 41, -115, 77, -75, 111, -68, -78, 56, -117, -39, -78, -110, -87, 87, 63, -45, -12, 84, -96, 107, -101, -40, -18, 1, -59, -50, 62, 91, -73, 107, -1, 64, 123, 115, 108, -84, 30, -62, -39, -86, -83, -90, -14, -21, -65, -126, 95, -127, -29, 103, 111};
//        byte[] byte80 = new byte[]{19, 70, -95, 13, -3, 69, -26, -101, 55, -25, -33, -3, 23, -71, -27, -124, 116, -29, 85, 18, 123, 67, -39, 45, -113, 6, 97, 68, 97, 50, -76, -50, 53, 51, 108, -67, 42, 57, -83, 35, 126, 18, -14, 76, 60, -31, 30, -4, 40, -99, -28, 11, -56, 67, 47, -32, -43, -103, 87, 65, -73, 21, -17, -82, -21, 35, 14, 25, 127, 51, -127, 71, 117, 101, 119, 100, -11, 74, 90, -65, 15, -106, 3, -66, 32, 34, 18, -35, 103, -112, 14, -47, 93, -20, -20, -96, -31, 7, -49, 59};
//        byte[] byte81 = new byte[]{-63, -12, -50, -109, 48, -79, -58, 72, -79, -24, -65, 101, 114, 92, -51, -71, -103, 9, 35, 4, 34, 60, -68, 40, 101, 105, 46, -83, -48, 73, 28, -105, -127, -56, 76, -83, 78, -124, 17, -78, -98, 82, -97, 18, 74, 120, 50, -98, 114, 72, 109, 32, 9, -29, -91, -17, 121, 123, -108, 60, -115, 47, -88, -42, -96, -36, -6, -4, 46, -56, -31, -39, -69, 20, -17, -66, 2, -72, -52, 51, -36, 106, 125, 23, -106, 71, -104, -113, -26, -57, -94, -44, 99, -86, -65, -108, -122, -37, 61, 67};
//        byte[] byte82 = new byte[]{5, 64, 97, -26, 111, -26, -100, -47, -107, -114, -128, -22, -39, -95, 83, 22, 56, 69, -55, 105, 23, 56, -20, -64, -74, -31, -48, 48, -85, -19, 34, 98, 88, -127, 15, 124, -65, 88, 39, -76, -86, -1, -5, 25, -61, -40, -53, -110, -42, -38, 113, 113, -71, 16, 87, 115, -126, 100, -45, -110, 75, -34, -73, -34, 40, -2, 47, -91, 5, -66, 49, 49, -18, -120, -1, -123, -92, -23, -112, -103, -43, -18, 100, -8, 25, -103, -123, -25, 5, 76, 102, 47, -48, 123, 19, -1, -29, 96, -86, 54};
//        byte[] byte83 = new byte[]{10, 125, 8, 112, 10, 85, -80, -53, -107, 27, -82, 6, 40, 110, -76, -106, 115, -93, -1, -96, 16, -104, -100, -26, 23, -55, -47, -90, -59, -22, -127, 42, -71, 68, 114, -99, 102, 53, 112, 77, -72, 22, -100, 40, -119, -32, 38, -48, -103, -46, -115, -34, 51, -124, 18, 104, 93, 60, 53, 98, 77, -94, -87, -90, 31, -55, 1, 108, -119, 13, -126, -74, -122, -8, -92, -114, 110, -37, -15, 26, -122, -127, 118, 117, 2, -99, 26, -74, -79, 71, -107, 73, -49, -8, 16, 111, 61, -61, 118, 37};
//        byte[] byte84 = new byte[]{-125, -100, 98, -56, 125, -94, 48, -83, 125, 95, 30, -46, -115, 32, -117, 108, 94, 88, -126, -111, -90, 115, 60, 39, -28, -115, -46, -84, -11, -102, 80, -29, -51, -48, 25, 92, 44, 50, 85, -76, 63, 99, 114, 97, 115, 104, 104, 97, 110, 100, 108, 101, 114, 32, 40, 116, 104, 105, 115, 32, 105, 115, 32, 97, 110, 100, 114, 111, 105, 100, 32, 99, 114, 97, 115, 104, 32, 99, 111, 108, 108, 101, 99, 116, 41, 32, 60, 50, 54, 51, 57, 57, 54, 48, 57, 55, 64, 113, 113, 46};
//        byte[] byte85 = new byte[]{99, 111, 109, 62, -119, 1, 55, 4, 19, 1, 10, 0, 33, 5, 2, 86, 109, 69, -69, 2, 27, 3, 5, 11, 9, 8, 7, 3, 5, 21, 10, 9, 8, 11, 5, 22, 2, 3, 1, 0, 2, 30, 1, 2, 23, -128, 0, 10, 9, 16, -88, -11, 39, 122, -106, 122, -67, 23, -81, -46, 8, 0, -126, 79, -87, 20, -44, 30, -77, -25, -90, 66, 79, 34, 56, -124, 61, -82, 21, -124, 123, -113, -114, 120, -70, 52, 89, 85, -42, -14, -86, 90, 36, 61, 66, 96, -115, 117, 33, 14};
//        byte[] byte86 = new byte[]{-95, 15, -97, -78, 66, -124, 108, 61, -46, 115, 69, 92, -75, 62, -81, -69, 75, -23, -46, 117, -22, 118, -77, -99, -38, 49, -120, 84, -66, 29, -105, 110, -73, 114, 65, -74, -26, -17, 111, -113, -7, -96, 29, -74, -13, -110, -62, -31, 98, 94, -49, 108, 95, -8, 72, 102, -103, 46, 6, -94, -31, 28, 41, 42, 8, -94, -77, -105, -126, -88, 98, 116, -40, 11, -92, 39, 88, -97, -126, -125, 29, 20, -69, -108, 52, 71, -86, 66, -76, 59, 50, -102, -20, -57, -82, -54, -65, -108, 49, -55};
//        byte[] byte87 = new byte[]{32, 2, 116, -66, 64, 70, -47, 80, 25, 67, 53, 65, -54, 28, -8, 43, 35, -52, -34, 13, -95, 1, 93, -78, -36, 44, 51, 82, -37, 38, 10, 11, 20, 71, -39, 18, 55, 63, 36, -8, 25, 89, 101, 60, -113, -64, 31, 34, 47, 18, 53, 62, -2, -71, -34, 69, 10, 66, -10, 95, 3, -126, -104, -124, -43, 40, 94, -66, 105, -40, 89, -59, -120, 14, 48, -21, 100, 102, -82, 28, 10, -24, 50, -87, 115, 99, 31, -2, 62, -103, -27, 66, -36, 1, 83, -90, -112, 61, 70, 33};
//        byte[] byte88 = new byte[]{-25, -43, -125, 42, 71, 89, 113, -85, 23, 29, 26, -84, -109, 88, -51, -59, 92, -40, -80, 2, 0, 0, -99, 3, -66, 4, 86, 109, 69, -69, 1, 8, 0, -77, 90, -98, 15, 8, -110, -125, 95, 8, -107, -93, 30, -35, 34, -6, 110, 33, 119, -115, 41, 70, -99, 120, 14, -22, -68, 72, 42, -49, 46, -82, 11, 77, -7, -80, 73, -106, -80, -103, -73, 59, 12, 107, -71, -99, 98, -62, 20, -104, -1, 99, -45, 111, 76, 19, 25, 116, 126, -118, -38, -33, 63, -75, 69, 79, 95, 18};
//        byte[] byte89 = new byte[]{112, 9, -111, 44, -32, -65, 24, 47, -123, 93, -111, 116, 19, 18, 96, 92, 105, 91, -23, 63, 22, 80, 123, -10, -12, 124, -81, 10, -113, -104, 25, 67, -128, -94, -46, 50, 120, -18, 115, 60, 9, 54, -103, 83, -5, 19, -6, -92, 39, 68, -92, 99, -63, 105, -109, 80, -116, 124, 20, 10, -6, 120, -96, 37, -125, 81, 89, 125, -117, -10, 1, 27, 70, -83, -41, -116, -18, -40, 26, 100, 95, -30, -66, -92, -46, -119, -87, 75, 55, -109, 110, -107, 32, -13, 33, 47, -79, -9, -117, 69};
//        byte[] byte90 = new byte[]{-21, -82, 108, -102, 110, 106, 51, 23, -117, -92, 100, -60, -37, 94, -10, -123, -27, -73, 23, -15, -43, -34, -30, -12, -60, -16, -95, -83, -62, 85, -87, 51, -34, -111, 80, -43, -41, -95, -18, -105, -49, -40, 54, -13, -18, 116, -70, -22, -101, -11, -32, 59, -71, 39, -88, 57, -39, 112, -67, 6, 110, 89, 6, 89, 48, -77, 56, -20, -100, -68, 53, -93, 41, -108, -120, 48, 51, -3, 70, 61, 10, -87, 117, -57, 120, -70, -110, -118, 85, 0, 17, 1, 0, 1, -2, 3, 3, 2, -81, 81};
//        byte[] byte91 = new byte[]{42, 48, 46, 8, 28, -16, -31, -124, 7, 16, 26, -36, -54, -87, 16, -6, 105, -91, 102, -40, 97, -7, 109, 93, -41, 103, 65, 54, -123, -54, 56, -50, 97, 1, 119, -80, -59, 23, 101, -102, -47, 10, 54, 31, 74, 55, 121, -80, -87, -29, -6, -48, 84, -109, -102, -57, -113, -112, 26, 59, -16, -121, -68, -45, -4, -75, 118, 32, -70, -68, -71, -52, 12, 68, -118, -56, -8, -11, -1, -51, 65, 109, -81, -95, 2, 125, -120, -127, -18, -90, 17, 28, -70, 47, -54, -123, 9, -12, 109, -128};
//        byte[] byte92 = new byte[]{-121, 60, -9, -91, -41, -56, -96, -122, -24, 40, 13, -15, 36, -119, -58, -7, -21, -115, -26, -74, -120, 103, -19, 117, 123, -13, 120, -41, -48, -95, -69, -1, 112, 86, 83, -18, -1, -90, 77, -45, 77, 28, -106, 19, -44, 0, 28, 45, 76, 60, -63, 78, -123, -88, 38, 32, 74, -8, 63, 67, -97, 105, -81, -61, -114, 64, 86, -117, 47, 28, 103, -39, -74, 95, -82, 80, 63, -11, -34, 50, -51, 99, 77, -128, -88, -99, -17, 125, 50, 99, 21, -7, 105, 119, 79, -79, 108, 46, 42, -51};
//        byte[] byte93 = new byte[]{-35, -93, -41, 47, 29, -49, 127, -66, 62, 71, -93, -35, 0, -96, 16, -30, -105, 104, -69, -22, -35, -27, 64, -52, -92, -70, -26, -17, -42, 33, -45, -11, 85, -80, -122, 107, 60, -67, 22, 113, -30, -43, -2, 82, -88, 44, 68, 120, 81, 5, 105, -84, -121, -11, -112, 56, 100, -104, 47, 51, -18, 93, 127, -98, -123, -69, -75, 4, 11, -69, 2, -32, -116, 62, -78, -26, -13, -91, 25, 17, 40, 94, 55, 64, -34, -64, -100, -35, 45, -27, -36, -122, -89, 38, -34, -39, 66, 91, 127, 41};
//        byte[] byte94 = new byte[]{-90, 51, 21, -104, -115, -117, -111, -81, -104, 59, -22, 72, -82, 127, 39, 49, 92, -67, -105, 62, -15, -108, -47, 107, -56, 122, 70, 119, -34, 124, 81, -13, -21, 123, -29, 33, -21, 82, 61, 30, 86, -77, 5, -82, -24, 23, -84, 61, 41, -40, 66, -6, -101, 32, 36, 19, 67, 110, 35, 54, 91, 51, -117, 83, 65, -84, -112, -14, 112, 62, 92, 75, 70, -45, -79, -9, -92, 104, -92, 4, -21, -55, 41, -14, -18, 49, 89, -118, -9, 36, 76, 1, 6, -111, -57, 22, 99, -115, -55, 104};
//        byte[] byte95 = new byte[]{56, -111, -4, 9, -34, -43, -55, 25, 121, -65, -7, 86, -71, -101, -61, 9, 46, -85, 45, -51, 96, -59, -38, -49, 122, -68, -43, -113, -109, 99, 57, -25, 97, -43, -82, 4, 46, -87, -64, -112, -105, -125, 61, -72, -102, -26, 28, -28, -66, -51, -58, -31, 110, 87, -48, 47, -113, -77, -24, -12, -27, -59, 37, -32, 3, -12, -72, -95, -78, 28, 19, -20, -109, 112, 89, -41, -44, -34, 9, 47, -61, 6, 127, -29, 3, 29, -6, 111, -45, 24, 67, -7, -101, -76, 114, -92, 44, 21, -36, -125};
//        byte[] byte96 = new byte[]{-89, 76, -63, -16, -125, -46, -61, 115, 97, 121, -116, 61, -93, -41, 115, 97, -65, 19, -3, 5, 51, -109, -89, 29, 103, -86, -117, 108, 11, -7, 31, -87, 114, -116, 81, -110, -29, 69, -84, -53, -8, -32, 9, -46, 90, -39, -76, -43, -7, -2, 58, -128, 115, 104, 106, -5, 9, -48, 19, -80, -100, -114, -32, 39, -74, -1, 51, 14, 67, 78, -77, -64, -43, 89, -56, 23, -102, -31, -69, 26, 92, 23, -80, -52, -52, -31, 55, -115, 69, 85, -76, -88, 6, -127, 17, -40, -87, 68, 60, 89};
//        byte[] byte97 = new byte[]{-54, -51, -125, -32, -11, -114, 51, -53, -18, 44, -24, 127, -47, 107, 35, -96, 75, 106, 0, 64, -31, -27, 51, 53, 65, 93, -37, -125, -8, -119, 94, 34, -15, 89, -99, 122, -33, 88, 105, -25, 0, 101, 87, 116, 102, -40, 59, 108, -50, -111, 76, 103, -101, 77, -65, 9, -77, -125, -85, -66, -109, 78, -51, 75, 98, 45, 48, -121, -98, 127, 5, -29, 21, 124, -127, 75, -44, 70, 121, -83, -49, -100, 66, -119, 1, 31, 4, 24, 1, 10, 0, 9, 5, 2, 86, 109, 69, -69, 2, 27};
//        byte[] byte98 = new byte[]{12, 0, 10, 9, 16, -88, -11, 39, 122, -106, 122, -67, 23, 84, 11, 7, -1, 123, -125, 42, -112, -35, -46, -38, 32, -96, 10, -43, 117, -43, -45, 7, 90, 29, -63, -86, -105, 32, -115, -69, -85, 62, -73, -67, -16, 24, -62, 74, -119, -67, -99, -46, 20, -79, -117, -1, -111, -52, 124, 49, 15, 55, 123, -26, -60, -124, 5, 88, 3, -55, -100, -80, 96, 80, 126, 3, 77, 81, -122, 28, -1, 97, 67, 5, -64, 97, 59, 69, 41, -9, -120, 114, -25, -127, -65, -110, 66, -13, -77, 28};
//        byte[] byte99 = new byte[]{49, -61, -25, -125, 42, -119, 71, -19, -61, -27, 59, 40, 70, 37, -102, 109, 84, 33, 107, -51, -124, 83, -120, -8, -24, -29, 18, 106, -9, 96, 73, 3, 72, 90, -91, -25, 30, -1, -99, -104, -13, 102, 14, -110, -30, -4, -93, 103, -40, -83, 47, -45, 68, -103, 33, -76, -80, -107, 80, -76, -64, -14, -16, 46, 113, 46, -7, -26, 92, -6, -8, -78, 48, 96, -75, -7, 46, -32, -86, 110, 32, -90, -77, -44, -99, 89, -67, -37, -45, 26, -61, 79, -128, 119, -31, 87, -77, -8, 84, -83};
//        byte[] byte100 = new byte[]{73, 88, -36, -54, -49, -96, -12, -52, 39, -46, -127, 49, -118, 58, -99, -91, 6, -80, -21, 37, -49, 125, 114, 52, 105, 70, 100, 56, -28, -31, 26, -107, 106, 7, 66, -60, 49, -97, -119, -13, -98, -34, 23, -23, -21, 58, -33, -28, 0, -8, -4, 94, -111, 84, 56, -109, 122, 66, 38, 54, -106, 104, -57, 40, 105, -114, -98, -92, 61, -74, 90, -60, -119, -80, 2, 0, 0};
//
//
//        List<byte[]> list = new ArrayList();
//        list.add(byte0);
//        list.add(byte1);
//        list.add(byte2);
//        list.add(byte3);
//        list.add(byte4);
//        list.add(byte5);
//        list.add(byte6);
//        list.add(byte7);
//        list.add(byte8);
//        list.add(byte9);
//        list.add(byte10);
//        list.add(byte11);
//        list.add(byte12);
//        list.add(byte13);
//        list.add(byte14);
//        list.add(byte15);
//        list.add(byte16);
//        list.add(byte17);
//        list.add(byte18);
//        list.add(byte19);
//        list.add(byte20);
//        list.add(byte21);
//        list.add(byte22);
//        list.add(byte23);
//        list.add(byte24);
//        list.add(byte25);
//        list.add(byte26);
//        list.add(byte27);
//        list.add(byte28);
//        list.add(byte29);
//        list.add(byte30);
//        list.add(byte31);
//        list.add(byte32);
//        list.add(byte33);
//        list.add(byte34);
//        list.add(byte35);
//        list.add(byte36);
//        list.add(byte37);
//        list.add(byte38);
//        list.add(byte39);
//        list.add(byte40);
//        list.add(byte41);
//        list.add(byte42);
//        list.add(byte43);
//        list.add(byte44);
//        list.add(byte45);
//        list.add(byte46);
//        list.add(byte47);
//        list.add(byte48);
//        list.add(byte49);
//        list.add(byte50);
//        list.add(byte51);
//        list.add(byte52);
//        list.add(byte53);
//        list.add(byte54);
//        list.add(byte55);
//        list.add(byte56);
//        list.add(byte57);
//        list.add(byte58);
//        list.add(byte59);
//        list.add(byte60);
//        list.add(byte61);
//        list.add(byte62);
//        list.add(byte63);
//        list.add(byte64);
//        list.add(byte65);
//        list.add(byte66);
//        list.add(byte67);
//        list.add(byte68);
//        list.add(byte69);
//        list.add(byte70);
//        list.add(byte71);
//        list.add(byte72);
//        list.add(byte73);
//        list.add(byte74);
//        list.add(byte75);
//        list.add(byte76);
//        list.add(byte77);
//        list.add(byte78);
//        list.add(byte79);
//        list.add(byte80);
//        list.add(byte81);
//        list.add(byte82);
//        list.add(byte83);
//        list.add(byte84);
//        list.add(byte85);
//        list.add(byte86);
//        list.add(byte87);
//        list.add(byte88);
//        list.add(byte89);
//        list.add(byte90);
//        list.add(byte91);
//        list.add(byte92);
//        list.add(byte93);
//        list.add(byte94);
//        list.add(byte95);
//        list.add(byte96);
//        list.add(byte97);
//        list.add(byte98);
//        list.add(byte99);
//        list.add(byte100);
//
//        ByteBuffer buffer = ByteBuffer.allocate(10077);
//        list.forEach(new Consumer<byte[]>() {
//            @Override
//            public void accept(byte[] bytes) {
//                buffer.put(bytes);
//            }
//        });
//
//        System.out.println("bytesize " + bytesize);
//        buffer.flip();
//        String secretFile = "/Users/uuxia/Desktop/secring.gpg";
//        byteToFile(buffer.array(),secretFile);

    }

    public static void byteToFile(byte[] byteArray, String targetPath) {
        InputStream inputStream = new ByteArrayInputStream(byteArray);
        File file = new File(targetPath);
        String path = targetPath.substring(0, targetPath.lastIndexOf("/"));
        if (!file.exists()) {
            new File(path).mkdir();
        }
        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream(file);
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inputStream.read(buf)) != -1) {
                fos.write(buf, 0, len);
            }
            fos.flush();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (null != fos) {
                try {
                    fos.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }


    //将文件转换成Byte数组
    public static byte[] getBytesByFile(String pathStr) {
        File file = new File(pathStr);
        try {
            FileInputStream fis = new FileInputStream(file);
            ByteArrayOutputStream bos = new ByteArrayOutputStream(1000);
            byte[] b = new byte[1000];
            int n;
            while ((n = fis.read(b)) != -1) {
                bos.write(b, 0, n);
            }
            fis.close();
            byte[] data = bos.toByteArray();
            bos.close();
            return data;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
}
